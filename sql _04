create database test;

use test;

create table orders_data
(
 cust_id int,
 order_id int,
 country varchar(50),
 state varchar(50)
);

insert into orders_data values(1,100,'USA','Seattle');
insert into orders_data values(2,101,'INDIA','UP');
insert into orders_data values(2,103,'INDIA','Bihar');
insert into orders_data values(4,108,'USA','WDC');
insert into orders_data values(5,109,'UK','London');
insert into orders_data values(4,110,'USA','WDC');
insert into orders_data values(3,120,'INDIA','AP');
insert into orders_data values(2,121,'INDIA','Goa');
insert into orders_data values(1,131,'USA','Seattle');
insert into orders_data values(6,142,'USA','Seattle');
insert into orders_data values(7,150,'USA','Seattle');

select * from orders_data;
select country from orders_data group by country
having count(*) = 1;


---- Group by concat---
--- write query to get distinct state in each country----
select country, GROUP_CONCAT(distinct(state)) as states_in_country from orders_data
group by country;

select country, GROUP_CONCAT(distinct(state) order by state DESC SEPARATOR '-') as states_in_country from orders_data
group by country;

----Subqueries in SQL-----
create table employees
(
    id int,
    name varchar(50),
    salary int
);

insert into employees values(1,'Shashank',5000),(2,'Amit',5500),(3,'Rahul',7000),(4,'Rohit',6000),(5,'Nitin',4000),(6,'Sunny',7500);

select * from employees;

---write a query to print all those employee records- who are getting salary more than rohit--
select * from employees
where salary > (select salary from employees where name = 'Rohit');

---- case when in sql----
Create table student_marks
(
    stu_id int,
    stu_name varchar(50),
    total_marks int
);

insert into student_marks values(1,'Shashank',50);
insert into student_marks values(2,'Rahul',91);
insert into student_marks values(3,'Amit',74);
insert into student_marks values(4,'Nikhil',65);
insert into student_marks values(5,'Rohit',86);
insert into student_marks values(6,'Deepak',77);

select * from student_marks;

--- write query to working on case statement---
select stu_id,
       stu_name,
       total_marks,
       case  
           when total_marks >=90 then 'A+'
           when total_marks >=85 and total_marks < 90 then 'A'
           when total_marks >=75 and total_marks < 80 then 'B+'
           when total_marks >=65 and total_marks < 70 then 'B'
           else 'c'
        end as grade 
from student_marks;
--uber interview question---
---write a query to get nodes from tree and its types.

create table tree
(
    node int,
    parent int
);
insert into tree values(5,8),(9,8),(4,5),(2,9),(1,5),(3,9),(8,null);
select * from tree;

select node,
       CASE 
        WHEN node not in(select DISTINCT(parent)from tree where parent is not null) 
        THEN 'Leaf' 
        when parent is null then 'Root'
        else 'Inner' 
     
       END as node_type
from tree;


----amazone que find the amount for online and cach payment for merchants.
create table transactions
(
    trx_date date,
    merchant_id varchar(10),
    amount int,
    payment_mode varchar(10)
);

insert into transactions values('2022-04-02','m1',150,'CASH');
insert into transactions values('2022-04-02','m1',500,'ONLINE');
insert into transactions values('2022-04-03','m2',450,'ONLINE');
insert into transactions values('2022-04-03','m1',100,'CASH');
insert into transactions values('2022-04-03','m3',600,'CASH');
insert into transactions values('2022-04-05','m5',200,'ONLINE');
insert into transactions values('2022-04-05','m2',100,'ONLINE');
select * from transactions;
select merchant_id,
       sum(case when payment_mode = 'cash' then amount else 0 end) as cash_amount,
       sum(CASE WHEN payment_mode = 'online' THEN amount else 0 end) as online_amount
from transactions       
group by merchant_id; 

select patients.patient_id,
first_name,
last_name from patients
join admissions 
on admissions.patient_id = patients.patient_id
where diagnosis = 'Dementia';

select patient_id, first_name,last_name
from patients
where patient_id In(select patient_id from admissions 
                    where diagnosis = 'Dementia');


----JOINS-----
--examples for join-----

create table orders
(
    order_id int,
    cust_id int,
    order_dat date, 
    shipper_id int
);

create table customers
(
    cust_id int,
    cust_name varchar(50),
    country varchar(50)
);

create table shippers
(
    ship_id int,
    shipper_name varchar(50)
);

insert into orders values(10308, 2, '2022-09-15', 3);
insert into orders values(10309, 30, '2022-09-16', 1);
insert into orders values(10310, 41, '2022-09-19', 2);

insert into customers values(1, 'Neel', 'India');
insert into customers values(2, 'Nitin', 'USA');
insert into customers values(3, 'Mukesh', 'UK');

insert into shippers values(3,'abc');
insert into shippers values(1,'xyz');

select * from orders;
select * from customers;
select * from shippers;

--perform inner join---
---Inner Join---
select o.*, c.*
from orders o
inner JOIN customers c 
on o.cust_id = c.cust_id;         

---Left Join---
select o.*, c.*
from orders o
LEFT JOIN customers c 
on o.cust_id = c.cust_id;

----right join---
select o.*, c.*
from orders o
right JOIN customers c 
on o.cust_id = c.cust_id;

----full outer join---
select o.*, c.*
from orders o
outer JOIN customers c 
on o.cust_id = c.cust_id;

